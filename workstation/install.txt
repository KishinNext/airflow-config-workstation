################################# EOV
################################# Workstation


# Config git
git config --global user.name "airflow-workstation"
# change the name by airflow-workstation and keep the email. Save and exit the file.

# Update packages of the instance
sudo yum -y update

# Upgrade pip
pip install --upgrade pip

# Create a python virtual environment
python -m venv .sandbox

# Active the python virtual environment
source .sandbox/bin/activate

# Download and extract the latest release of eksctl with the following command.
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin && eksctl version


# Download the latest release of Kubectl with the command 
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \ 
curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256" && \
echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check && \
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl &&\
kubectl version --client


# Install Helm3
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh


# Check the version
helm version --short

# Download the stable repo
helm repo add stable https://charts.helm.sh/stable



################################# EOV

# upgrade aws cli
pip install --upgrade awscli && hash -r

# install some utilities
sudo yum -y install jq gettext bash-completion moreutils

# go the settings, AWS settings and turn off temporary credentials [Only cloud9]
Cloud9 preferences > aws settings > deactivate AWS managed temporary credentials


# remove temporary credentials
rm -vf ${HOME}/.aws/credentials

# configure aws env variables
# The following get-caller-identity example displays information about the IAM identity used to authenticate the request
aws configure
aws sts get-caller-identity
export ACCOUNT_ID=
export AWS_REGION=

# update the file bash_profile and configure aws
echo "export ACCOUNT_ID=${ACCOUNT_ID}" | tee -a ~/.bash_profile
echo "export AWS_REGION=${AWS_REGION}" | tee -a ~/.bash_profile
aws configure set default.region ${AWS_REGION}
aws configure get default.region

# Create a Role with admin permisions, and attach that role into the ec2 instance of cloud9

# Remove credentials added before
remove rm -vf /home/ec2-user/.aws/credentials

# Check the config variables
cat /home/ec2-user/.aws/config
aws sts get-caller-identity

{
    "UserId": "gg",
    "Account": "gg",
    "Arn": "arn:aws:sts::gg:assumed-role/airflow-role-cloud9/i-gg"
}

################################# EOV

# Press return for all questions by keeping the defaults and empty passphrase.
ssh-keygen -t rsa

################################# EOV

cd airflow-materials-aws

# Create the cluster
eksctl create cluster -f cluster.yml

# Check if the cluster is healthy
kubectl get nodes
kubectl get pods --all-namespaces

################################# EOV

# Installing Flux
# create the flux Kubernetes namespace
kubectl create namespace flux

# add the Flux chart repository to Helm and install Flux.
helm repo add fluxcd https://charts.fluxcd.io

helm upgrade -i flux fluxcd/flux \
--set git.url=git@github.com:marclamberti/airflow-eks-config \
--namespace flux

helm upgrade -i helm-operator fluxcd/helm-operator --wait \
--namespace flux \
--set git.ssh.secretName=flux-git-deploy \
--set git.pollInterval=1m \
--set chartsSyncInterval=1m \
--set helm.versions=v3

# Check the install. 3 pods should be running
kubectl get pods -n flux

# Install fluxctl in order to get the SSH key to allow GitHub write access. This allows Flux to keep the configuration in GitHub in sync with the configuration deployed in the cluster.
sudo wget -O /usr/local/bin/fluxctl https://github.com/fluxcd/flux/releases/download/1.19.0/fluxctl_linux_amd64
sudo chmod 755 /usr/local/bin/fluxctl

fluxctl version
fluxctl identity --k8s-fwd-ns flux

mkdir airflow-eks-config/{workloads,releases,namespaces}
find airflow-eks-config/ -type d -exec touch {}/.keep \;
cd airflow-eks-config
git add .
git commit -am "directory structure"
git push